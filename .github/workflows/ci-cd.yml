name: CI/CD
on:
  push:
    branches: [ main ]
    tags: [ "v*" ]

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Configure Git for private modules
        run: git config --global url."https://${{ secrets.CQRS_READ_TOKEN }}@github.com/inklabs/cqrs".insteadOf "https://github.com/inklabs/cqrs"

      - name: Go Mod Download
        run: go mod download
        env:
          GOPRIVATE: github.com/inklabs/cqrs

      - name: Go Mod Verify
        run: go mod verify

      - name: Install Dependencies
        run: ./build/install-deps.sh

      - name: Go Generate
        run: go generate .

      - name: Go Test
        run: go test -v -count 1 -race -failfast ./...

      - name: Get version
        id: vars
        run: echo "version=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT

      - name: Build
        run: ./build/build-release.sh ${{ steps.vars.outputs.version }}

      - name: Update Latest Release
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && steps.vars.outputs.version || 'latest' }}
          name: ${{ github.ref_type == 'tag' && format('Release %s', steps.vars.outputs.version) || 'Latest Build' }}
          draft: false
          prerelease: ${{ github.ref_type != 'tag' }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Webhook
        run: |
          echo "Notifying service of release: ${{ steps.gh_release.outputs.html_url }}"
#          curl -X POST -H "Content-Type: application/json" \
#               -d '{"text":"New release available: '${{ steps.gh_release.outputs.html_url }}'"}' \
#               ${{ secrets.NOTIFY_WEBHOOK }}
